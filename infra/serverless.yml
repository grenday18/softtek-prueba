service: "softtek-infra"
frameworkVersion: "4"

package:
  individually: true

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
    
custom:
  mergedTableName: merged-list-${opt:stage}
  pokemonTableName: pokemon-list-${opt:stage}
  historyTableName: history-list-${opt:stage}

resources:
  # Tables
  - ${file(resources/tables/merged-table.yml)}
  - ${file(resources/tables/pokemon-table.yml)}
  - ${file(resources/tables/history-table.yml)}
  # Policies
  - ${file(resources/managed-policies.yml)}
  # Roles
  - ${file(resources/roles/list-mergeds-role.yml)}
  - ${file(resources/roles/create-merged-role.yml)}
  - ${file(resources/roles/list-history-role.yml)}
  - ${file(resources/roles/create-history-role.yml)}
  # Topics
  - ${file(resources/topics/notify-searched-topic.yml)}
  # Redis
  - ${file(resources/redis/redis.yml)}
  - Outputs:
      MergedTableName:
        Value: ${self:custom.mergedTableName}
        Export:
          Name:
            Fn::Sub: "${AWS::StackName}-MergedTableName"
      PokemonTableName:
        Value: ${self:custom.pokemonTableName}
        Export:
          Name:
            Fn::Sub: "${AWS::StackName}-PokemonTableName"
      HistoryTableName:
        Value: ${self:custom.historyTableName}
        Export:
          Name:
            Fn::Sub: "${AWS::StackName}-HistoryTableName"
      ListMergedsRole:
        Value:
          Fn::GetAtt: [ ListMergedsRole, Arn ]
        Export:
          Name:
            Fn::Sub: "${AWS::StackName}-ListMergedsRole"
      CreateMergedRole:
        Value:
          Fn::GetAtt: [ CreateMergedRole, Arn ]
        Export:
          Name:
            Fn::Sub: "${AWS::StackName}-CreateMergedRole"
      CreateHistoryRole:
        Value:
          Fn::GetAtt: [ CreateHistoryRole, Arn ]
        Export:
          Name:
            Fn::Sub: "${AWS::StackName}-CreateHistoryRole"
      ListHistoryRole:
        Value:
          Fn::GetAtt: [ ListHistoryRole, Arn ]
        Export:
          Name:
            Fn::Sub: "${AWS::StackName}-ListHistoryRole"
      NotifySearchedTopic:
        Value: !Ref NotifySearchedTopic
        Export:
          Name:
            Fn::Sub: "${AWS::StackName}-NotifySearchedTopic"
      RedisClusterEndpoint:
        Value: !GetAtt RedisReplicationGroup.PrimaryEndPoint.Address
        Export:
          Name: 
            Fn::Sub: "${AWS::StackName}-RedisClusterEndpoint"